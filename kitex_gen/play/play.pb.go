// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: play.proto

package play

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int64  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	StatusMessage string `protobuf:"bytes,2,opt,name=StatusMessage,proto3" json:"StatusMessage,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BaseResp) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type Play struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type      uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`          //1-file 2-opear 3-音乐会
	Area      string `protobuf:"bytes,4,opt,name=Area,proto3" json:"Area,omitempty"`           //剧目出品地区
	Rating    uint32 `protobuf:"varint,5,opt,name=Rating,proto3" json:"Rating,omitempty"`      //剧目等级 1-儿童 2-青年 3-成年
	Duration  string `protobuf:"bytes,6,opt,name=Duration,proto3" json:"Duration,omitempty"`   //时长 如：3h30m30s ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
	StartDate string `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"` //剧目开始时间 按照示例格式：2006-01-02 15:04:05（\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}）
	EndDate   string `protobuf:"bytes,8,opt,name=EndDate,proto3" json:"EndDate,omitempty"`     //剧目结束时间 按照示例格式：2006-01-02 15:04:05（\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}）
	Price     int64  `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *Play) Reset() {
	*x = Play{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Play) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Play) ProtoMessage() {}

func (x *Play) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Play.ProtoReflect.Descriptor instead.
func (*Play) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{1}
}

func (x *Play) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Play) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Play) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Play) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Play) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Play) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Play) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Play) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Play) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AddPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type      uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`          //1-file 2-opear 3-音乐会
	Area      string `protobuf:"bytes,3,opt,name=Area,proto3" json:"Area,omitempty"`           //剧目出品地区
	Rating    uint32 `protobuf:"varint,4,opt,name=Rating,proto3" json:"Rating,omitempty"`      //剧目等级 1-儿童 2-青年 3-成年
	Duration  string `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`   //时长 如：3h30m30s
	StartDate string `protobuf:"bytes,6,opt,name=StartDate,proto3" json:"StartDate,omitempty"` //剧目开始时间 按照示例格式：2006-01-02 15:04:05（\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}）
	EndDate   string `protobuf:"bytes,7,opt,name=EndDate,proto3" json:"EndDate,omitempty"`     //剧目结束时间 按照示例格式：2006-01-02 15:04:05（\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}）
	Price     int64  `protobuf:"varint,8,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *AddPlayRequest) Reset() {
	*x = AddPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayRequest) ProtoMessage() {}

func (x *AddPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayRequest.ProtoReflect.Descriptor instead.
func (*AddPlayRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{2}
}

func (x *AddPlayRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddPlayRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddPlayRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *AddPlayRequest) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AddPlayRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AddPlayRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AddPlayRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AddPlayRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AddPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *AddPlayResponse) Reset() {
	*x = AddPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayResponse) ProtoMessage() {}

func (x *AddPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayResponse.ProtoReflect.Descriptor instead.
func (*AddPlayResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{3}
}

func (x *AddPlayResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type UpdatePlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type      uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`          //1-file 2-opear 3-音乐会
	Area      string `protobuf:"bytes,4,opt,name=Area,proto3" json:"Area,omitempty"`           //剧目出品地区
	Rating    uint32 `protobuf:"varint,5,opt,name=Rating,proto3" json:"Rating,omitempty"`      //剧目等级 1-儿童 2-青年 3-成年
	Duration  string `protobuf:"bytes,6,opt,name=Duration,proto3" json:"Duration,omitempty"`   //时长 如：3h30m30s
	StartDate string `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"` //剧目开始时间 按照示例格式：2006-01-02（\d{4}-\d{2}-\d{2}）
	EndDate   string `protobuf:"bytes,8,opt,name=EndDate,proto3" json:"EndDate,omitempty"`     //剧目结束时间 按照示例格式：2006-01-02（\d{4}-\d{2}-\d{2}）
	Price     int64  `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *UpdatePlayRequest) Reset() {
	*x = UpdatePlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayRequest) ProtoMessage() {}

func (x *UpdatePlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePlayRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePlayRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePlayRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdatePlayRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *UpdatePlayRequest) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdatePlayRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *UpdatePlayRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdatePlayRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdatePlayRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdatePlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *UpdatePlayResponse) Reset() {
	*x = UpdatePlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayResponse) ProtoMessage() {}

func (x *UpdatePlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlayResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlayResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DeletePlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeletePlayRequest) Reset() {
	*x = DeletePlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlayRequest) ProtoMessage() {}

func (x *DeletePlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlayRequest.ProtoReflect.Descriptor instead.
func (*DeletePlayRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePlayRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *DeletePlayResponse) Reset() {
	*x = DeletePlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlayResponse) ProtoMessage() {}

func (x *DeletePlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlayResponse.ProtoReflect.Descriptor instead.
func (*DeletePlayResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePlayResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type PlayToScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *PlayToScheduleRequest) Reset() {
	*x = PlayToScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayToScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayToScheduleRequest) ProtoMessage() {}

func (x *PlayToScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayToScheduleRequest.ProtoReflect.Descriptor instead.
func (*PlayToScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{8}
}

func (x *PlayToScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlayToScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp     *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
	Play         *Play     `protobuf:"bytes,2,opt,name=Play,proto3" json:"Play,omitempty"`
	ScheduleList []int64   `protobuf:"varint,3,rep,packed,name=ScheduleList,proto3" json:"ScheduleList,omitempty"`
}

func (x *PlayToScheduleResponse) Reset() {
	*x = PlayToScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayToScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayToScheduleResponse) ProtoMessage() {}

func (x *PlayToScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayToScheduleResponse.ProtoReflect.Descriptor instead.
func (*PlayToScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{9}
}

func (x *PlayToScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *PlayToScheduleResponse) GetPlay() *Play {
	if x != nil {
		return x.Play
	}
	return nil
}

func (x *PlayToScheduleResponse) GetScheduleList() []int64 {
	if x != nil {
		return x.ScheduleList
	}
	return nil
}

type GetAllPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int32 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`   //当前页
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"` //一页数据条数
}

func (x *GetAllPlayRequest) Reset() {
	*x = GetAllPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPlayRequest) ProtoMessage() {}

func (x *GetAllPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPlayRequest.ProtoReflect.Descriptor instead.
func (*GetAllPlayRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllPlayRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetAllPlayRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetAllPlayResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	List  []*Play `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetAllPlayResponseData) Reset() {
	*x = GetAllPlayResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPlayResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPlayResponseData) ProtoMessage() {}

func (x *GetAllPlayResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPlayResponseData.ProtoReflect.Descriptor instead.
func (*GetAllPlayResponseData) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllPlayResponseData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetAllPlayResponseData) GetList() []*Play {
	if x != nil {
		return x.List
	}
	return nil
}

type GetAllPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp               `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
	Data     *GetAllPlayResponseData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetAllPlayResponse) Reset() {
	*x = GetAllPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPlayResponse) ProtoMessage() {}

func (x *GetAllPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPlayResponse.ProtoReflect.Descriptor instead.
func (*GetAllPlayResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllPlayResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GetAllPlayResponse) GetData() *GetAllPlayResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 每创建一个演出计划，就要立即生成对应的演出票（就像创建演出厅时自动生成座位一样）
type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PlayId   int64  `protobuf:"varint,2,opt,name=PlayId,proto3" json:"PlayId,omitempty"`     //对应的剧目ID
	StudioId int64  `protobuf:"varint,3,opt,name=StudioId,proto3" json:"StudioId,omitempty"` //对应的演出厅ID
	ShowTime string `protobuf:"bytes,4,opt,name=ShowTime,proto3" json:"ShowTime,omitempty"`  //放映时间 按照示例格式：2006-01-02 15:04:05
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{13}
}

func (x *Schedule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Schedule) GetPlayId() int64 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *Schedule) GetStudioId() int64 {
	if x != nil {
		return x.StudioId
	}
	return 0
}

func (x *Schedule) GetShowTime() string {
	if x != nil {
		return x.ShowTime
	}
	return ""
}

type AddScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayId   int64  `protobuf:"varint,1,opt,name=PlayId,proto3" json:"PlayId,omitempty"`     //对应的剧目ID
	StudioId int64  `protobuf:"varint,2,opt,name=StudioId,proto3" json:"StudioId,omitempty"` //对应的演出厅ID
	ShowTime string `protobuf:"bytes,3,opt,name=ShowTime,proto3" json:"ShowTime,omitempty"`  //放映时间 按照示例格式：2006-01-02 15:04:05
}

func (x *AddScheduleRequest) Reset() {
	*x = AddScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScheduleRequest) ProtoMessage() {}

func (x *AddScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScheduleRequest.ProtoReflect.Descriptor instead.
func (*AddScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{14}
}

func (x *AddScheduleRequest) GetPlayId() int64 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *AddScheduleRequest) GetStudioId() int64 {
	if x != nil {
		return x.StudioId
	}
	return 0
}

func (x *AddScheduleRequest) GetShowTime() string {
	if x != nil {
		return x.ShowTime
	}
	return ""
}

type AddScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *AddScheduleResponse) Reset() {
	*x = AddScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScheduleResponse) ProtoMessage() {}

func (x *AddScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScheduleResponse.ProtoReflect.Descriptor instead.
func (*AddScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{15}
}

func (x *AddScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type UpdateScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PlayId   int64  `protobuf:"varint,2,opt,name=PlayId,proto3" json:"PlayId,omitempty"`     //对应的剧目ID
	StudioId int64  `protobuf:"varint,3,opt,name=StudioId,proto3" json:"StudioId,omitempty"` //对应的演出厅ID
	ShowTime string `protobuf:"bytes,4,opt,name=ShowTime,proto3" json:"ShowTime,omitempty"`  //放映时间 按照示例格式：2006-01-02 15:04:05
}

func (x *UpdateScheduleRequest) Reset() {
	*x = UpdateScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleRequest) ProtoMessage() {}

func (x *UpdateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScheduleRequest) GetPlayId() int64 {
	if x != nil {
		return x.PlayId
	}
	return 0
}

func (x *UpdateScheduleRequest) GetStudioId() int64 {
	if x != nil {
		return x.StudioId
	}
	return 0
}

func (x *UpdateScheduleRequest) GetShowTime() string {
	if x != nil {
		return x.ShowTime
	}
	return ""
}

type UpdateScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *UpdateScheduleResponse) Reset() {
	*x = UpdateScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleResponse) ProtoMessage() {}

func (x *UpdateScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DeleteScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteScheduleRequest) Reset() {
	*x = DeleteScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleRequest) ProtoMessage() {}

func (x *DeleteScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleRequest.ProtoReflect.Descriptor instead.
func (*DeleteScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
}

func (x *DeleteScheduleResponse) Reset() {
	*x = DeleteScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleResponse) ProtoMessage() {}

func (x *DeleteScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleResponse.ProtoReflect.Descriptor instead.
func (*DeleteScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetScheduleRequest) Reset() {
	*x = GetScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleRequest) ProtoMessage() {}

func (x *GetScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{20}
}

func (x *GetScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
	Schedule *Schedule `protobuf:"bytes,2,opt,name=Schedule,proto3" json:"Schedule,omitempty"`
}

func (x *GetScheduleResponse) Reset() {
	*x = GetScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleResponse) ProtoMessage() {}

func (x *GetScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{21}
}

func (x *GetScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GetScheduleResponse) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type GetAllScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int32 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"`   //当前页
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"` //一页数据条数
}

func (x *GetAllScheduleRequest) Reset() {
	*x = GetAllScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllScheduleRequest) ProtoMessage() {}

func (x *GetAllScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetAllScheduleRequest) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{22}
}

func (x *GetAllScheduleRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GetAllScheduleRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                //演出计划ID
	PlayName   string `protobuf:"bytes,2,opt,name=PlayName,proto3" json:"PlayName,omitempty"`     //剧目名称
	Area       string `protobuf:"bytes,3,opt,name=Area,proto3" json:"Area,omitempty"`             //剧目出品地区
	Rating     uint32 `protobuf:"varint,4,opt,name=Rating,proto3" json:"Rating,omitempty"`        //剧目等级 1-儿童 2-青年 3-成年
	Duration   string `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`     //时长 如：3h30m30s ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
	ShowTime   string `protobuf:"bytes,6,opt,name=ShowTime,proto3" json:"ShowTime,omitempty"`     //放映时间 按照示例格式：2006-01-02 15:04:05
	Price      int64  `protobuf:"varint,7,opt,name=Price,proto3" json:"Price,omitempty"`          //票价
	StudioName string `protobuf:"bytes,8,opt,name=StudioName,proto3" json:"StudioName,omitempty"` //演出厅名称
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{23}
}

func (x *Result) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Result) GetPlayName() string {
	if x != nil {
		return x.PlayName
	}
	return ""
}

func (x *Result) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Result) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Result) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Result) GetShowTime() string {
	if x != nil {
		return x.ShowTime
	}
	return ""
}

func (x *Result) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Result) GetStudioName() string {
	if x != nil {
		return x.StudioName
	}
	return ""
}

type GetAllScheduleResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64     `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	List  []*Result `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetAllScheduleResponseData) Reset() {
	*x = GetAllScheduleResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllScheduleResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllScheduleResponseData) ProtoMessage() {}

func (x *GetAllScheduleResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllScheduleResponseData.ProtoReflect.Descriptor instead.
func (*GetAllScheduleResponseData) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{24}
}

func (x *GetAllScheduleResponseData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetAllScheduleResponseData) GetList() []*Result {
	if x != nil {
		return x.List
	}
	return nil
}

type GetAllScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp                   `protobuf:"bytes,1,opt,name=BaseResp,proto3" json:"BaseResp,omitempty"`
	Data     *GetAllScheduleResponseData `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetAllScheduleResponse) Reset() {
	*x = GetAllScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_play_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllScheduleResponse) ProtoMessage() {}

func (x *GetAllScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_play_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetAllScheduleResponse) Descriptor() ([]byte, []int) {
	return file_play_proto_rawDescGZIP(), []int{25}
}

func (x *GetAllScheduleResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GetAllScheduleResponse) GetData() *GetAllScheduleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_play_proto protoreflect.FileDescriptor

var file_play_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6c,
	0x61, 0x79, 0x22, 0x50, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3d, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xe1, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x40, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79,
	0x54, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x52, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x08, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50,
	0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x77, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x32, 0xd8, 0x05, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x12, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x17, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x79, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x79, 0x54, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x15, 0x5a, 0x13, 0x54, 0x54, 0x4d, 0x53, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_play_proto_rawDescOnce sync.Once
	file_play_proto_rawDescData = file_play_proto_rawDesc
)

func file_play_proto_rawDescGZIP() []byte {
	file_play_proto_rawDescOnce.Do(func() {
		file_play_proto_rawDescData = protoimpl.X.CompressGZIP(file_play_proto_rawDescData)
	})
	return file_play_proto_rawDescData
}

var file_play_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_play_proto_goTypes = []interface{}{
	(*BaseResp)(nil),                   // 0: play.BaseResp
	(*Play)(nil),                       // 1: play.Play
	(*AddPlayRequest)(nil),             // 2: play.AddPlayRequest
	(*AddPlayResponse)(nil),            // 3: play.AddPlayResponse
	(*UpdatePlayRequest)(nil),          // 4: play.UpdatePlayRequest
	(*UpdatePlayResponse)(nil),         // 5: play.UpdatePlayResponse
	(*DeletePlayRequest)(nil),          // 6: play.DeletePlayRequest
	(*DeletePlayResponse)(nil),         // 7: play.DeletePlayResponse
	(*PlayToScheduleRequest)(nil),      // 8: play.PlayToScheduleRequest
	(*PlayToScheduleResponse)(nil),     // 9: play.PlayToScheduleResponse
	(*GetAllPlayRequest)(nil),          // 10: play.GetAllPlayRequest
	(*GetAllPlayResponseData)(nil),     // 11: play.GetAllPlayResponseData
	(*GetAllPlayResponse)(nil),         // 12: play.GetAllPlayResponse
	(*Schedule)(nil),                   // 13: play.Schedule
	(*AddScheduleRequest)(nil),         // 14: play.AddScheduleRequest
	(*AddScheduleResponse)(nil),        // 15: play.AddScheduleResponse
	(*UpdateScheduleRequest)(nil),      // 16: play.UpdateScheduleRequest
	(*UpdateScheduleResponse)(nil),     // 17: play.UpdateScheduleResponse
	(*DeleteScheduleRequest)(nil),      // 18: play.DeleteScheduleRequest
	(*DeleteScheduleResponse)(nil),     // 19: play.DeleteScheduleResponse
	(*GetScheduleRequest)(nil),         // 20: play.GetScheduleRequest
	(*GetScheduleResponse)(nil),        // 21: play.GetScheduleResponse
	(*GetAllScheduleRequest)(nil),      // 22: play.GetAllScheduleRequest
	(*Result)(nil),                     // 23: play.Result
	(*GetAllScheduleResponseData)(nil), // 24: play.GetAllScheduleResponseData
	(*GetAllScheduleResponse)(nil),     // 25: play.GetAllScheduleResponse
}
var file_play_proto_depIdxs = []int32{
	0,  // 0: play.AddPlayResponse.BaseResp:type_name -> play.BaseResp
	0,  // 1: play.UpdatePlayResponse.BaseResp:type_name -> play.BaseResp
	0,  // 2: play.DeletePlayResponse.BaseResp:type_name -> play.BaseResp
	0,  // 3: play.PlayToScheduleResponse.BaseResp:type_name -> play.BaseResp
	1,  // 4: play.PlayToScheduleResponse.Play:type_name -> play.Play
	1,  // 5: play.GetAllPlayResponseData.List:type_name -> play.Play
	0,  // 6: play.GetAllPlayResponse.BaseResp:type_name -> play.BaseResp
	11, // 7: play.GetAllPlayResponse.Data:type_name -> play.GetAllPlayResponseData
	0,  // 8: play.AddScheduleResponse.BaseResp:type_name -> play.BaseResp
	0,  // 9: play.UpdateScheduleResponse.BaseResp:type_name -> play.BaseResp
	0,  // 10: play.DeleteScheduleResponse.BaseResp:type_name -> play.BaseResp
	0,  // 11: play.GetScheduleResponse.BaseResp:type_name -> play.BaseResp
	13, // 12: play.GetScheduleResponse.Schedule:type_name -> play.Schedule
	23, // 13: play.GetAllScheduleResponseData.List:type_name -> play.Result
	0,  // 14: play.GetAllScheduleResponse.BaseResp:type_name -> play.BaseResp
	24, // 15: play.GetAllScheduleResponse.Data:type_name -> play.GetAllScheduleResponseData
	2,  // 16: play.PlayService.AddPlay:input_type -> play.AddPlayRequest
	4,  // 17: play.PlayService.UpdatePlay:input_type -> play.UpdatePlayRequest
	6,  // 18: play.PlayService.DeletePlay:input_type -> play.DeletePlayRequest
	10, // 19: play.PlayService.GetAllPlay:input_type -> play.GetAllPlayRequest
	14, // 20: play.PlayService.AddSchedule:input_type -> play.AddScheduleRequest
	16, // 21: play.PlayService.UpdateSchedule:input_type -> play.UpdateScheduleRequest
	18, // 22: play.PlayService.DeleteSchedule:input_type -> play.DeleteScheduleRequest
	22, // 23: play.PlayService.GetAllSchedule:input_type -> play.GetAllScheduleRequest
	8,  // 24: play.PlayService.PlayToSchedule:input_type -> play.PlayToScheduleRequest
	20, // 25: play.PlayService.GetSchedule:input_type -> play.GetScheduleRequest
	3,  // 26: play.PlayService.AddPlay:output_type -> play.AddPlayResponse
	5,  // 27: play.PlayService.UpdatePlay:output_type -> play.UpdatePlayResponse
	7,  // 28: play.PlayService.DeletePlay:output_type -> play.DeletePlayResponse
	12, // 29: play.PlayService.GetAllPlay:output_type -> play.GetAllPlayResponse
	15, // 30: play.PlayService.AddSchedule:output_type -> play.AddScheduleResponse
	17, // 31: play.PlayService.UpdateSchedule:output_type -> play.UpdateScheduleResponse
	19, // 32: play.PlayService.DeleteSchedule:output_type -> play.DeleteScheduleResponse
	25, // 33: play.PlayService.GetAllSchedule:output_type -> play.GetAllScheduleResponse
	9,  // 34: play.PlayService.PlayToSchedule:output_type -> play.PlayToScheduleResponse
	21, // 35: play.PlayService.GetSchedule:output_type -> play.GetScheduleResponse
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_play_proto_init() }
func file_play_proto_init() {
	if File_play_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_play_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Play); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayToScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayToScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPlayResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllScheduleResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_play_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_play_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_play_proto_goTypes,
		DependencyIndexes: file_play_proto_depIdxs,
		MessageInfos:      file_play_proto_msgTypes,
	}.Build()
	File_play_proto = out.File
	file_play_proto_rawDesc = nil
	file_play_proto_goTypes = nil
	file_play_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.1. DO NOT EDIT.

type PlayService interface {
	AddPlay(ctx context.Context, req *AddPlayRequest) (res *AddPlayResponse, err error)
	UpdatePlay(ctx context.Context, req *UpdatePlayRequest) (res *UpdatePlayResponse, err error)
	DeletePlay(ctx context.Context, req *DeletePlayRequest) (res *DeletePlayResponse, err error)
	GetAllPlay(ctx context.Context, req *GetAllPlayRequest) (res *GetAllPlayResponse, err error)
	AddSchedule(ctx context.Context, req *AddScheduleRequest) (res *AddScheduleResponse, err error)
	UpdateSchedule(ctx context.Context, req *UpdateScheduleRequest) (res *UpdateScheduleResponse, err error)
	DeleteSchedule(ctx context.Context, req *DeleteScheduleRequest) (res *DeleteScheduleResponse, err error)
	GetAllSchedule(ctx context.Context, req *GetAllScheduleRequest) (res *GetAllScheduleResponse, err error)
	PlayToSchedule(ctx context.Context, req *PlayToScheduleRequest) (res *PlayToScheduleResponse, err error)
	GetSchedule(ctx context.Context, req *GetScheduleRequest) (res *GetScheduleResponse, err error)
}
